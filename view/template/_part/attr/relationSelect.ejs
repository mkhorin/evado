<!-- _part/attr/relationSelect -->
<%
const p = {
  handler: 'RelationSelect'
};
const params = {p};
%>
<%- include(_view.get('_part/attr/_params'), params) %>
<%
const d = {
  relName: attr,
  key: model.PK,
  delete: false,
  unlink: true,
  confirmDeletion: true,
  ...data
};
if (d.order === undefined && !d.modalSortArray) {
  d.order = {[model.PK]: -1};
}
d.attr = attr;
d.relName = d.relName || attr;

const relation = model.getRelation(d.relName);
const urlParams = {
  rel: d.relName,
  pid: model.getId()
};
d.backRef = relation.isBackRef();
d.multiple = relation.isMultiple();

if (d.list === undefined || d.list === true) {
  d.list = _url(['list-related-select', urlParams]);
} else if (typeof d.list === 'string') {
  d.list = _url([d.list, urlParams]);
} else if (Array.isArray(d.list)) {
  d.list = _url(d.list);
} else if (d.list) {
  d.list = _url(['list-related-select', Object.assign(urlParams, d.list)]);
}
const relUrl = typeof relRoute === 'undefined'
  ? relation.model.getControllerClass().getRouteName()
  : relRoute;

if (d.viewTitle !== null) {
  d.viewTitle = _url(d.viewTitle === undefined ? `${relUrl}/title` : d.viewTitle);
}
if (d.clone === true) {
  d.clone = _url(`${relUrl}/clone`);
} else if (Array.isArray(d.clone)) {
  d.clone = _url(d.clone);
}
if (d.create === undefined || d.create === true) {
  d.create = _url([`${relUrl}/create`, urlParams]);
} else if (typeof d.create === 'string') {
  d.create = _url([d.create, urlParams]);
} else if (Array.isArray(d.create)) {
  d.create = _url(d.create);
} else if (d.create) {
  d.create = _url([`${relUrl}/create`, Object.assign(urlParams, d.create)]);
}
if (d.update === undefined || d.update === true) {
  d.update = _url([`${relUrl}/update`, urlParams]);
} else if (typeof d.update === 'string') {
  d.update = _url([d.update, urlParams]);
} else if (Array.isArray(d.update)) {
  d.update = _url(d.update);
} else if (d.update) {
  d.update = _url([`${relUrl}/update`, Object.assign(urlParams, d.update)]);
}
if (d.link === undefined || d.link === true) {
  d.link = _url([`${relUrl}/select`, urlParams]);
} else if (typeof d.link === 'string') {
  d.link = _url([d.link, urlParams]);
} else if (Array.isArray(d.link)) {
  d.link = _url(d.link);
} else if (d.link) {
  d.link = _url([`${relUrl}/select`, Object.assign(urlParams, d.link)]);
}
if (d.modalSort) {
  if (d.modalSort === true) {
    d.modalSort = _url(d.modalSortArray ? 'sort-related-array' : 'sort-related', urlParams);
  } else if (Array.isArray(d.modalSort)) {
    d.modalSort = _url(d.modalSort);
  }
}
const related = model.rel(attr);
%>
<div class="form-attr form-group row <%- p.required %> <%- p.css %>" data-handler="<%= p.handler %>">

  <%- include(_view.get('_part/attr/_label'), params) %>

  <div class="<%- p.valueCss %>">
    <input name="<%- p.name %>" type="hidden" class="form-value">
    <div class="relation-select">
      <div class="hidden-commands commands">
        <% if (d.unlink) { %>
        <div class="nav-group">
          <button data-command="unlink" data-index="10" title="Remove" type="button"
              class="btn-white btn-outline-danger btn">
            <i class="fa fa-unlink"></i>
          </button>
        </div>
        <% } if (d.create) { %>
        <button data-command="create" data-index="20" title="Create" type="button"
            class="btn-white btn-outline-success btn">
          <i class="fas fa-plus"></i>
        </button>
        <% } if (d.delete) { %>
        <button data-command="delete" data-index="30" title="Delete" type="button"
            class="btn-white btn-outline-danger btn">
          <i class="far fa-trash-alt"></i>
        </button>
        <% } if (d.modalSort) { %>
        <button data-command="sort" data-index="40" title="Sort" type="button"
            class="btn-white btn-outline-secondary btn">
          <i class="fas fa-sort"></i>
        </button>
        <% } if (typeof tools !== 'undefined') { %>
        <%- include(_view.get('_part/misc/render'), {data: tools}) %>
        <% } %>
      </div>
      <div class="input-group">
        <select class="form-select" <% if (d.multiple) { %>multiple<% } %>
            data-params="<%= JSON.stringify(d) %>">
          <% if (Array.isArray(related)) {
              for (const item of related) { %>
          <option value="<%- item.getId() %>" selected><%= item.getTitle() %></option>
          <% }} else if (related) { %>
          <option value="<%- related.getId() %>" selected><%= related.getTitle() %></option>
          <% } %>
        </select>
        <% if (d.update) { %>
        <button data-command="update" title="Edit" type="button" class="btn-white btn-outline-primary btn">
          <i class="fas fa-pencil-alt"></i>
        </button>
        <% } %>
      </div>
    </div>
    <div class="error-block"></div>
    <div class="hint-block" data-t="<%- p.translate %>"><%- p.hint %></div>
  </div>
</div>