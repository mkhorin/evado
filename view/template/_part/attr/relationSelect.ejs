<!-- _part/attr/relationSelect -->
<%
const p = {handler: 'RelationSelect'};
%>
<%- include(_view.get('_part/attr/_params'), {p}) %>
<%
const d = {
    relName: attr,
    order: {[model.PK]: -1},
    key: model.PK,
    delete: false,
    unlink: true,
    confirmDeletion: true,
    ...data
};
d.attr = attr;
d.relName = d.relName || attr;

const relation = model.getRelation(d.relName);
const urlParams = {
    rel: d.relName,
    pid: model.getId()
};
d.backRef = relation.isBackRef();
d.multiple = relation.isMultiple();

if (d.list === undefined || d.list === true) {
    d.list = _url(['list-related-select', urlParams]);
} else if (typeof d.list === 'string') {
    d.list = _url([d.list, urlParams]);
} else if (Array.isArray(d.list)) {
    d.list = _url(d.list);
} else if (d.list) {
    d.list = _url(['list-related-select', Object.assign(urlParams, d.list)]);
}
const relUrl = typeof relRoute === 'undefined'
    ? relation.model.getControllerClass().getBaseName()
    : relRoute;

if (d.viewTitle !== null) {
    d.viewTitle = _url(d.viewTitle === undefined ? `${relUrl}/title` : d.viewTitle);
}
if (d.clone === true) {
    d.clone = _url(`${relUrl}/clone`);
} else if (Array.isArray(d.clone)) {
    d.clone = _url(d.clone);
}
if (d.create === undefined || d.create === true) {
    d.create = _url([`${relUrl}/create`, urlParams]);
} else if (typeof d.create === 'string') {
    d.create = _url([d.create, urlParams]);
} else if (Array.isArray(d.create)) {
    d.create = _url(d.create);
} else if (d.create) {
    d.create = _url([`${relUrl}/create`, Object.assign(urlParams, d.create)]);
}
if (d.update === undefined || d.update === true) {
    d.update = _url([`${relUrl}/update`, urlParams]);
} else if (typeof d.update === 'string') {
    d.update = _url([d.update, urlParams]);
} else if (Array.isArray(d.update)) {
    d.update = _url(d.update);
} else if (d.update) {
    d.update = _url([`${relUrl}/update`, Object.assign(urlParams, d.update)]);
}
if (d.link === undefined || d.link === true) {
    d.link = _url([`${relUrl}/select`, urlParams]);
} else if (typeof d.link === 'string') {
    d.link = _url([d.link, urlParams]);
} else if (Array.isArray(d.link)) {
    d.link = _url(d.link);
} else if (d.link) {
    d.link = _url([`${relUrl}/select`, Object.assign(urlParams, d.link)]);
}
if (d.modalSort) {
    if (d.modalSort === true) {
        d.modalSort = _url('sort-related', urlParams);
    } else if (Array.isArray(d.modalSort)) {
        d.modalSort = _url(d.modalSort);
    }
}
const related = model.rel(attr);
%>
<div class="form-attr form-group <%- p.required %> <%- p.css %>" data-handler="<%= p.handler %>">
    <label class="control-label <%- p.labelCss %>" title="<%= p.extHint %>"
           data-t="<%- p.translate %>"><%- p.label %></label>
    <div class="<%- p.valueCss %>">
        <div class="box relation-select-box">
            <input name="<%- p.name %>" type="hidden" class="form-value">
            <div class="box-body">
                <div class="list-commands">
                    <% if (d.unlink) { %>
                    <div class="btn-set">
                        <button data-command="unlink" data-index="10" title="Remove" class="btn btn-default mr10"
                                type="button">
                            <span class="fa fa-unlink text-danger"></span>
                        </button>
                    </div>
                    <% } if (d.create) { %>
                    <button data-command="create" data-index="20" title="Create" class="btn btn-success btn-light" type="button">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                    <% } if (d.update) { %>
                    <button data-command="update" data-index="30" title="Edit" class="btn btn-warning btn-light" type="button">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>
                    <% } if (d.delete) { %>
                    <button data-command="delete" data-index="40" title="Delete" class="btn btn-white" type="button">
                        <span class="glyphicon glyphicon-trash text-danger"></span>
                    </button>
                    <% } if (d.modalSort) { %>
                    <button data-command="sort" data-index="50" title="Sort" class="btn btn-white" type="button">
                        <span class="glyphicon glyphicon-sort"></span>
                    </button>
                    <% } if (typeof tools !== 'undefined') { %>
                    <%- include(_view.get('_part/other/render'), {data: tools}) %>
                    <% } %>
                </div>
                <select class="form-control" <% if (d.multiple) { %>multiple<% } %>
                        data-params="<%= JSON.stringify(d) %>">
                    <% if (Array.isArray(related)) {
                       for (const item of related) { %>
                    <option value="<%- item.getId() %>" selected><%= item.getTitle() %></option>
                    <% }} else if (related) { %>
                    <option value="<%- related.getId() %>" selected><%= related.getTitle() %></option>
                    <% } %>
                </select>
            </div>
        </div>
        <div class="error-block"></div>
        <div class="hint-block" data-t="<%- p.translate %>"><%- p.hint %></div>
    </div>
</div>